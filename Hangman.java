/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.pointandclick;
import java.awt.image.BufferedImage;
import java.awt.Graphics;
import java.io.BufferedReader;
import javax.swing.*;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Random;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Abdullah K
 */
public class Hangman extends javax.swing.JFrame {
   
   private String[] randomString = {"abstract", "cemetery", "nurse", "pharmacy", "climbing"};
   private Random a;
   private Graphics g;
   private String holder,numScore,answer;
   private String guess;
   private JLabel hiddenWord,displayScore;
   private int score;
   private int numCounter;
    
    /**
     * Creates new form Hangman
     */
    public Hangman() {
        initComponents();
        FlowLayout layoutManager = new FlowLayout();
        score = 100;
        displayScore = new JLabel("100");
        jPanel4.add(displayScore);
        setPost();
        jPanel3.setLayout(layoutManager);
        showDate();
        showTime();
        holder = generateRandom();
        createLabel();
       
        setVisible(true);
    }
    
    public String generateRandom(){
        a = new Random();
        int b =a.nextInt(5);
        return randomString[b];
    }
    
    public void createLabel(){
        guess = "_";
        for(int i = 0; i < holder.length() - 1; i++){
          guess += " _";
       }
       hiddenWord = new JLabel(guess);
       jPanel3.add(hiddenWord);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void showDate()
    {
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        dateLabel.setText(dateFormat.format(date));
    }

    public void showTime()
    {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                Date date = new Date();
                SimpleDateFormat timeFormat = new SimpleDateFormat("hh:mm:ss a");
                timeLabel.setText(timeFormat.format(date));
            }
        }).start();
    }
    private void setSkipScore(){
        score = 0;
        updateScore(score);
    }
    private void endGame(){
        JOptionPane.showMessageDialog(this, "You lose!");
        new ColorGame(0).setVisible(true);
        dispose();
    }
    private void updateScore(int num){
        numScore = String.valueOf(num);
        displayScore.setText(numScore);
        jPanel4.add(displayScore);    
    }
    private void gameWon(String guess){
        if(!guess.contains("_")){
            JOptionPane.showMessageDialog(this, "You win!");
            new ColorGame(score).setVisible(true);
            dispose();
        }
    }
    private void setPost(){
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\phong\\Documents\\NetBeansProjects\\PointAndClick\\src\\main\\java\\com\\mycompany\\pointandclick\\HangmanPost.jpg"));
    }
    private void checkLost(int numCounter){
        if(numCounter > 0){
            switch(numCounter){
                case 1:
                    jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\phong\\Documents\\NetBeansProjects\\PointAndClick\\src\\main\\java\\com\\mycompany\\pointandclick\\HangmanHead.jpg"));
                    break;
                case 2:
                    jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\phong\\Documents\\NetBeansProjects\\PointAndClick\\src\\main\\java\\com\\mycompany\\pointandclick\\HangmanBody.jpg"));
                    break;
                case 3:
                    jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\phong\\Documents\\NetBeansProjects\\PointAndClick\\src\\main\\java\\com\\mycompany\\pointandclick\\HangmanRightArm.jpg"));
                    break;
                case 4:
                    jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\phong\\Documents\\NetBeansProjects\\PointAndClick\\src\\main\\java\\com\\mycompany\\pointandclick\\HangmanLeftArm.jpg"));
                    break;
                case 5:
                    jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\phong\\Documents\\NetBeansProjects\\PointAndClick\\src\\main\\java\\com\\mycompany\\pointandclick\\HangmanRightLeg.jpg"));
                    break;
                case 6:
                    jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\phong\\Documents\\NetBeansProjects\\PointAndClick\\src\\main\\java\\com\\mycompany\\pointandclick\\HangmanLeftLeg.jpg"));
                    break;
                default:
                    break;
            }
        }
        if(numCounter == 6){
            JOptionPane.showMessageDialog(this, "You lose!");
            new ColorGame(score).setVisible(true);
            dispose();
        }
    }
    private boolean checkString(String Letter){
       int i = 0;
        i = holder.indexOf(Letter);
        while(i >= 0) {
            guess = guess.substring(0,i*2) + Letter + guess.substring(i*2+1);
            i = holder.indexOf(Letter, i+1);
        }
        return holder.contains(Letter);
    }
    private void updatePanel(String guess){
       hiddenWord.setText(guess);
       jPanel3.add(hiddenWord);
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HangmanTitle = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        buttonI = new javax.swing.JButton();
        buttonL = new javax.swing.JButton();
        buttonT = new javax.swing.JButton();
        buttonV = new javax.swing.JButton();
        buttonA = new javax.swing.JButton();
        buttonB = new javax.swing.JButton();
        buttonE = new javax.swing.JButton();
        buttonC = new javax.swing.JButton();
        buttonD = new javax.swing.JButton();
        buttonF = new javax.swing.JButton();
        buttonG = new javax.swing.JButton();
        buttonH = new javax.swing.JButton();
        buttonJ = new javax.swing.JButton();
        buttonK = new javax.swing.JButton();
        buttonM = new javax.swing.JButton();
        buttonN = new javax.swing.JButton();
        buttonO = new javax.swing.JButton();
        buttonP = new javax.swing.JButton();
        buttonQ = new javax.swing.JButton();
        buttonR = new javax.swing.JButton();
        buttonS = new javax.swing.JButton();
        buttonU = new javax.swing.JButton();
        buttonW = new javax.swing.JButton();
        buttonX = new javax.swing.JButton();
        buttonY = new javax.swing.JButton();
        buttonZ = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        dateTimePanel = new javax.swing.JPanel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 600, 400));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 600, 400));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 400));

        HangmanTitle.setBackground(new java.awt.Color(102, 255, 255));
        HangmanTitle.setFont(new java.awt.Font("Stencil Std", 3, 24)); // NOI18N
        HangmanTitle.setForeground(new java.awt.Color(153, 0, 204));
        HangmanTitle.setText("HANGMAN");
        HangmanTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HangmanTitleActionPerformed(evt);
            }
        });

        buttonI.setText("I");
        buttonI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIActionPerformed(evt);
            }
        });

        buttonL.setText("L");
        buttonL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLActionPerformed(evt);
            }
        });

        buttonT.setText("T");
        buttonT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTActionPerformed(evt);
            }
        });

        buttonV.setText("V");
        buttonV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVActionPerformed(evt);
            }
        });

        buttonA.setText("A");
        buttonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAActionPerformed(evt);
            }
        });

        buttonB.setText("B");
        buttonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBActionPerformed(evt);
            }
        });

        buttonE.setText("E");
        buttonE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEActionPerformed(evt);
            }
        });

        buttonC.setText("C");
        buttonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCActionPerformed(evt);
            }
        });

        buttonD.setText("D");
        buttonD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDActionPerformed(evt);
            }
        });

        buttonF.setText("F");
        buttonF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFActionPerformed(evt);
            }
        });

        buttonG.setText("G");
        buttonG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGActionPerformed(evt);
            }
        });

        buttonH.setText("H");
        buttonH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHActionPerformed(evt);
            }
        });

        buttonJ.setText("J");
        buttonJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonJActionPerformed(evt);
            }
        });

        buttonK.setText("K");
        buttonK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonKActionPerformed(evt);
            }
        });

        buttonM.setText("M");
        buttonM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMActionPerformed(evt);
            }
        });

        buttonN.setText("N");
        buttonN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNActionPerformed(evt);
            }
        });

        buttonO.setText("O");
        buttonO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOActionPerformed(evt);
            }
        });

        buttonP.setText("P");
        buttonP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPActionPerformed(evt);
            }
        });

        buttonQ.setText("Q");
        buttonQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonQActionPerformed(evt);
            }
        });

        buttonR.setText("R");
        buttonR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRActionPerformed(evt);
            }
        });

        buttonS.setText("S");
        buttonS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSActionPerformed(evt);
            }
        });

        buttonU.setText("U");
        buttonU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUActionPerformed(evt);
            }
        });

        buttonW.setText("W");
        buttonW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonWActionPerformed(evt);
            }
        });

        buttonX.setText("X");
        buttonX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonXActionPerformed(evt);
            }
        });

        buttonY.setText("Y");
        buttonY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonYActionPerformed(evt);
            }
        });

        buttonZ.setText("Z");
        buttonZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonZActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonA, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonG)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonJ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonM))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonO)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonQ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonU)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonW)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonY)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonZ))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonA)
                    .addComponent(buttonB)
                    .addComponent(buttonE)
                    .addComponent(buttonC)
                    .addComponent(buttonD)
                    .addComponent(buttonF)
                    .addComponent(buttonG)
                    .addComponent(buttonH)
                    .addComponent(buttonI)
                    .addComponent(buttonJ)
                    .addComponent(buttonK)
                    .addComponent(buttonL)
                    .addComponent(buttonM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonN)
                    .addComponent(buttonO)
                    .addComponent(buttonP)
                    .addComponent(buttonQ)
                    .addComponent(buttonR)
                    .addComponent(buttonS)
                    .addComponent(buttonT)
                    .addComponent(buttonU)
                    .addComponent(buttonV)
                    .addComponent(buttonW)
                    .addComponent(buttonX)
                    .addComponent(buttonY)
                    .addComponent(buttonZ))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 185, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Score:");
        jPanel4.add(jLabel1);

        jButton1.setText("Skip");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\phong\\Documents\\NetBeansProjects\\PointAndClick\\src\\main\\java\\com\\mycompany\\pointandclick\\HangmanHead.jpg")); // NOI18N

        dateTimePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        dateLabel.setText("Date");

        timeLabel.setText("Time");

        javax.swing.GroupLayout dateTimePanelLayout = new javax.swing.GroupLayout(dateTimePanel);
        dateTimePanel.setLayout(dateTimePanelLayout);
        dateTimePanelLayout.setHorizontalGroup(
            dateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateTimePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addContainerGap())
        );
        dateTimePanelLayout.setVerticalGroup(
            dateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dateTimePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dateTimePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HangmanTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HangmanTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateTimePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(614, 437));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void displayAnswer(){
        char A = holder.charAt(0);
        String B = Character.toString(A);
        answer = B;
        for(int i =1; i < holder.length();i++){
           answer = answer + " " + holder.charAt(i);
       } 
       updatePanel(answer); 
    }
    private void buttonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCActionPerformed
        if(checkString("c")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonC.setVisible(false);
    }//GEN-LAST:event_buttonCActionPerformed

    private void buttonDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDActionPerformed
         if(checkString("d")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonD.setVisible(false);
    }//GEN-LAST:event_buttonDActionPerformed

    private void buttonFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFActionPerformed
        if(checkString("f")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
       
        buttonF.setVisible(false);
    }//GEN-LAST:event_buttonFActionPerformed

    private void buttonMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMActionPerformed
        if(checkString("m")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonM.setVisible(false);
    }//GEN-LAST:event_buttonMActionPerformed

    private void buttonLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLActionPerformed
        if(checkString("l")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonL.setVisible(false);
    }//GEN-LAST:event_buttonLActionPerformed

    private void buttonWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonWActionPerformed
        if(checkString("w")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonW.setVisible(false);
    }//GEN-LAST:event_buttonWActionPerformed

    private void buttonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAActionPerformed
        if(checkString("a")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonA.setVisible(false);
    }//GEN-LAST:event_buttonAActionPerformed

    private void HangmanTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HangmanTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HangmanTitleActionPerformed

    private void buttonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBActionPerformed
        if(checkString("b")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonB.setVisible(false);
    }//GEN-LAST:event_buttonBActionPerformed

    private void buttonEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEActionPerformed
        if(checkString("e")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonE.setVisible(false);
    }//GEN-LAST:event_buttonEActionPerformed

    private void buttonGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGActionPerformed
        if(checkString("g")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonG.setVisible(false);
    }//GEN-LAST:event_buttonGActionPerformed

    private void buttonHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHActionPerformed
        if(checkString("h")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
         updateScore(score);
        checkLost(numCounter);
       
        buttonH.setVisible(false);
    }//GEN-LAST:event_buttonHActionPerformed

    private void buttonIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIActionPerformed
        if(checkString("i")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonI.setVisible(false);
    }//GEN-LAST:event_buttonIActionPerformed

    private void buttonJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonJActionPerformed
        if(checkString("j")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonJ.setVisible(false);
    }//GEN-LAST:event_buttonJActionPerformed

    private void buttonKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonKActionPerformed
        if(checkString("k")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
       
        buttonK.setVisible(false);
    }//GEN-LAST:event_buttonKActionPerformed

    private void buttonNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNActionPerformed
       if(checkString("n")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonN.setVisible(false);
    }//GEN-LAST:event_buttonNActionPerformed

    private void buttonOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOActionPerformed
        if(checkString("o")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonO.setVisible(false);
    }//GEN-LAST:event_buttonOActionPerformed

    private void buttonPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPActionPerformed
        if(checkString("p")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonP.setVisible(false);
    }//GEN-LAST:event_buttonPActionPerformed

    private void buttonQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonQActionPerformed
        if(checkString("q")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonQ.setVisible(false);
    }//GEN-LAST:event_buttonQActionPerformed

    private void buttonRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRActionPerformed
        if(checkString("r")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonR.setVisible(false);
    }//GEN-LAST:event_buttonRActionPerformed

    private void buttonSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSActionPerformed
        if(checkString("s")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonS.setVisible(false);
    }//GEN-LAST:event_buttonSActionPerformed

    private void buttonTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTActionPerformed
        if(checkString("t")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonT.setVisible(false);
    }//GEN-LAST:event_buttonTActionPerformed

    private void buttonUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUActionPerformed
        if(checkString("u")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
         updateScore(score);
        checkLost(numCounter);
       
        buttonU.setVisible(false);
    }//GEN-LAST:event_buttonUActionPerformed

    private void buttonVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVActionPerformed
        if(checkString("v")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
         updateScore(score);
        checkLost(numCounter);
       
        buttonV.setVisible(false);
    }//GEN-LAST:event_buttonVActionPerformed

    private void buttonXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonXActionPerformed
        if(checkString("x")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonX.setVisible(false);
    }//GEN-LAST:event_buttonXActionPerformed

    private void buttonYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonYActionPerformed
        if(checkString("y")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonY.setVisible(false);
    }//GEN-LAST:event_buttonYActionPerformed

    private void buttonZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonZActionPerformed
        if(checkString("z")){
            updatePanel(guess);
        }
         else {
             numCounter++;
             score -= 10;
         }
        gameWon(guess);
        updateScore(score);
        checkLost(numCounter);
        
        buttonZ.setVisible(false);
    }//GEN-LAST:event_buttonZActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setSkipScore();
        displayAnswer();
        endGame();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hangman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hangman();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField HangmanTitle;
    private javax.swing.JButton buttonA;
    private javax.swing.JButton buttonB;
    private javax.swing.JButton buttonC;
    private javax.swing.JButton buttonD;
    private javax.swing.JButton buttonE;
    private javax.swing.JButton buttonF;
    private javax.swing.JButton buttonG;
    private javax.swing.JButton buttonH;
    private javax.swing.JButton buttonI;
    private javax.swing.JButton buttonJ;
    private javax.swing.JButton buttonK;
    private javax.swing.JButton buttonL;
    private javax.swing.JButton buttonM;
    private javax.swing.JButton buttonN;
    private javax.swing.JButton buttonO;
    private javax.swing.JButton buttonP;
    private javax.swing.JButton buttonQ;
    private javax.swing.JButton buttonR;
    private javax.swing.JButton buttonS;
    private javax.swing.JButton buttonT;
    private javax.swing.JButton buttonU;
    private javax.swing.JButton buttonV;
    private javax.swing.JButton buttonW;
    private javax.swing.JButton buttonX;
    private javax.swing.JButton buttonY;
    private javax.swing.JButton buttonZ;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel dateTimePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
